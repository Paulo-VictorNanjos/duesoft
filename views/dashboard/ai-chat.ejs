<!-- AI Chat Button -->
<button class="ai-chat-button" id="openAIChat">
    <i class="fas fa-robot"></i>
</button>

<!-- AI Chat Modal -->
<div class="ai-chat-modal" id="aiChatModal">
    <div class="chat-interface glass-card">
        <!-- Chat Header -->
        <div class="chat-header">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center gap-2">
                    <div class="ai-avatar">
                        <i class="fas fa-robot"></i>
                    </div>
                    <div>
                        <h2 class="mb-0">Assistente IA da <%= company.name %></h2>
                        <small class="text-muted">Desenvolvido pela <%= company.name %></small>
                    </div>
                </div>
                <button class="btn-close-chat" id="closeAIChat">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>

        <!-- Chat Messages -->
        <div class="chat-messages" id="chatMessages">
            <!-- Mensagem de Boas-vindas -->
            <div class="message assistant">
                <div class="message-content">
                    <p>Olá! Sou o assistente IA da <%= company.name %>. Como posso ajudar você hoje?</p>
                </div>
            </div>
        </div>

        <!-- Input Area -->
        <div class="chat-input-area">
            <form id="chatForm" class="d-flex gap-2">
                <div class="flex-grow-1 position-relative">
                    <textarea 
                        id="messageInput" 
                        class="form-control" 
                        placeholder="Digite sua pergunta..."
                        rows="1"
                    ></textarea>
                    <div class="input-actions">
                        <button type="button" class="btn btn-link text-muted" id="clearChat">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </form>
        </div>
    </div>
</div>

<style>
:root {
    --chat-bg: rgba(15, 23, 42, 0.7);
    --message-user-bg: rgba(99, 102, 241, 0.2);
    --message-assistant-bg: rgba(255, 255, 255, 0.1);
    --border-color: rgba(255, 255, 255, 0.15);
}

/* Botão flutuante do chat */
.ai-chat-button {
    position: fixed;
    top: 50%;
    right: 30px;
    width: 48px;
    height: 48px;
    transform: translateY(-50%);
    border-radius: 12px;
    background: linear-gradient(135deg, #6366F1 0%, #3B82F6 100%);
    border: none;
    color: white;
    font-size: 1.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
    transition: all 0.3s ease;
    z-index: 1000;
}

.ai-chat-button:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(99, 102, 241, 0.4);
}

/* Modal do chat */
.ai-chat-modal {
    position: fixed;
    top: 50%;
    right: 30px;
    width: 380px;
    height: 600px;
    transform: translateY(-50%);
    z-index: 1001;
    display: none;
    animation: slideIn 0.3s ease;
}

.ai-chat-modal.active {
    display: block;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-45%);
    }
    to {
        opacity: 1;
        transform: translateY(-50%);
    }
}

.chat-interface {
    height: 100%;
    background: var(--chat-bg);
    backdrop-filter: blur(12px);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.2);
    display: flex;
    flex-direction: column;
}

.btn-close-chat {
    background: none;
    border: none;
    color: white;
    font-size: 1.25rem;
    padding: 0.5rem;
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.2s ease;
}

.btn-close-chat:hover {
    opacity: 1;
}

.content-wrapper {
    padding: 0 2rem;
}

.ai-chat-container {
    width: 100%;
    margin: 2rem 0;
}

.chat-header {
    padding: 1rem;
    border-bottom: 1px solid var(--border-color);
    background: rgba(0, 0, 0, 0.2);
}

.ai-avatar {
    width: 36px;
    height: 36px;
    background: linear-gradient(135deg, #6366F1 0%, #3B82F6 100%);
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.125rem;
    color: white;
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.chat-header h2 {
    font-size: 1rem;
    font-weight: 600;
    margin: 0;
}

.chat-header small {
    font-size: 0.813rem;
    opacity: 0.8;
}

.chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    background: rgba(15, 23, 42, 0.4);
}

.message {
    max-width: 85%;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.message.user {
    align-self: flex-end;
}

.message-content {
    padding: 0.75rem 1rem;
    font-size: 0.938rem;
    line-height: 1.5;
    background: var(--message-assistant-bg);
    border-radius: 12px;
    border: 1px solid var(--border-color);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.message.user .message-content {
    background: var(--message-user-bg);
    border: none;
    box-shadow: 0 2px 8px rgba(99, 102, 241, 0.2);
}

.chat-input-area {
    padding: 1rem;
    border-top: 1px solid var(--border-color);
    background: rgba(0, 0, 0, 0.2);
}

.chat-input-area textarea {
    padding: 0.75rem 1rem;
    font-size: 0.938rem;
    line-height: 1.5;
    min-height: 44px;
    background: rgba(255, 255, 255, 0.07);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    color: white;
    resize: none;
    transition: all 0.2s ease;
}

.chat-input-area textarea:focus {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(99, 102, 241, 0.5);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.15);
}

.btn-primary {
    height: 44px;
    padding: 0 1.25rem;
    font-size: 1rem;
    background: linear-gradient(135deg, #6366F1 0%, #3B82F6 100%);
    border: none;
    border-radius: 12px;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
}

.btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.input-actions {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
}

/* Scrollbar mais suave */
.chat-messages::-webkit-scrollbar {
    width: 5px;
}

.chat-messages::-webkit-scrollbar-track {
    background: transparent;
}

.chat-messages::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 3px;
    transition: all 0.2s ease;
}

.chat-messages::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
}

/* Animações mais suaves */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(8px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.message {
    animation: fadeIn 0.3s ease backwards;
}

/* Loading indicator mais elegante */
.typing-indicator {
    display: flex;
    gap: 0.5rem;
    padding: 1rem;
    background: var(--message-assistant-bg);
    border-radius: 12px;
    width: fit-content;
}

.typing-dot {
    width: 6px;
    height: 6px;
    background: rgba(99, 102, 241, 0.8);
    border-radius: 50%;
    animation: typingAnimation 1.4s infinite ease-in-out;
}

@keyframes typingAnimation {
    0%, 60%, 100% { transform: translateY(0); }
    30% { transform: translateY(-4px); }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const openButton = document.getElementById('openAIChat');
    const closeButton = document.getElementById('closeAIChat');
    const modal = document.getElementById('aiChatModal');
    const chatForm = document.getElementById('chatForm');
    const messageInput = document.getElementById('messageInput');
    const chatMessages = document.getElementById('chatMessages');
    const clearChatBtn = document.getElementById('clearChat');

    // Abrir/Fechar Modal
    openButton.addEventListener('click', () => {
        modal.classList.add('active');
        openButton.style.display = 'none';
    });

    closeButton.addEventListener('click', () => {
        modal.classList.remove('active');
        openButton.style.display = 'flex';
    });

    // Função para adicionar mensagem ao chat
    function addMessage(content, isUser = false) {
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${isUser ? 'user' : 'assistant'}`;
        
        const messageHTML = `
            <div class="message-content">
                <p>${content}</p>
            </div>
        `;
        
        messageDiv.innerHTML = messageHTML;
        chatMessages.appendChild(messageDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Função para mostrar indicador de digitação
    function showTypingIndicator() {
        const indicator = document.createElement('div');
        indicator.className = 'message assistant';
        indicator.innerHTML = `
            <div class="typing-indicator">
                <div class="typing-dot"></div>
                <div class="typing-dot"></div>
                <div class="typing-dot"></div>
            </div>
        `;
        chatMessages.appendChild(indicator);
        chatMessages.scrollTop = chatMessages.scrollHeight;
        return indicator;
    }

    // Handler do formulário
    chatForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const message = messageInput.value.trim();
        if (!message) return;

        // Adiciona mensagem do usuário
        addMessage(message, true);
        messageInput.value = '';

        // Mostra indicador de digitação
        const typingIndicator = showTypingIndicator();

        try {
            const response = await fetch('/ai/ask', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ question: message })
            });

            const data = await response.json();
            
            // Remove indicador de digitação
            typingIndicator.remove();

            if (data.success) {
                addMessage(data.response, false);
            } else {
                addMessage('Desculpe, ocorreu um erro ao processar sua pergunta. Por favor, tente novamente.', false);
            }
        } catch (error) {
            console.error('Erro:', error);
            typingIndicator.remove();
            addMessage('Desculpe, ocorreu um erro ao processar sua pergunta. Por favor, tente novamente.', false);
        }
    });

    // Auto-resize do textarea
    messageInput.addEventListener('input', function() {
        this.style.height = 'auto';
        this.style.height = (this.scrollHeight) + 'px';
    });

    // Limpar chat
    clearChatBtn.addEventListener('click', function() {
        if (confirm('Tem certeza que deseja limpar o histórico do chat?')) {
            chatMessages.innerHTML = `
                <div class="message assistant">
                    <div class="message-content">
                        <p>Olá! Sou o assistente IA da <%= company.name %>. Como posso ajudar você hoje?</p>
                    </div>
                </div>
            `;
        }
    });
});
</script> 