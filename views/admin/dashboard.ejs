<div class="dashboard-container">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="header-content">
            <h1 class="dashboard-title">Dashboard Administrativo</h1>
            <p class="dashboard-subtitle">Visão geral do sistema</p>
        </div>
        <div class="dashboard-actions">
            <button class="btn btn-icon-text" id="refreshStats">
                <i class="fas fa-sync-alt"></i>
                <span>Atualizar</span>
            </button>
            <select class="form-select period-select" id="periodSelect">
                <option value="today">Hoje</option>
                <option value="week">Última Semana</option>
                <option value="month" selected>Último Mês</option>
                <option value="year">Último Ano</option>
            </select>
        </div>
    </div>

    <!-- Stats Grid -->
    <div class="stats-grid">
        <!-- Usuários Card -->
        <div class="stat-card">
            <div class="stat-header">
                <div class="stat-icon bg-primary-soft">
                    <i class="fas fa-users"></i>
                </div>
                <div class="stat-actions">
                    <i class="fas fa-ellipsis-h"></i>
                </div>
            </div>
            <div class="stat-info">
                <h3>Alunos Ativos</h3>
                <div class="stat-value" id="activeUsers">0</div>
                <div class="stat-change positive">
                    <i class="fas fa-arrow-up"></i>
                    <span id="userGrowth">0%</span>
                    <span class="change-label">desde último mês</span>
                </div>
            </div>
        </div>

        <!-- Cursos Card -->
        <div class="stat-card">
            <div class="stat-header">
                <div class="stat-icon bg-success-soft">
                    <i class="fas fa-graduation-cap"></i>
                </div>
                <div class="stat-actions">
                    <i class="fas fa-ellipsis-h"></i>
                </div>
            </div>
            <div class="stat-info">
                <h3>Cursos Ativos</h3>
                <div class="stat-value" id="activeCourses">0</div>
                <div class="stat-details">
                    <i class="fas fa-check-circle"></i>
                    <span id="completedCourses">0</span> concluídos este mês
                </div>
            </div>
        </div>

        <!-- Provas Card -->
        <div class="stat-card">
            <div class="stat-header">
                <div class="stat-icon bg-info-soft">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="stat-actions">
                    <i class="fas fa-ellipsis-h"></i>
                </div>
            </div>
            <div class="stat-info">
                <h3>Provas Realizadas</h3>
                <div class="stat-value" id="completedExams">0</div>
                <div class="stat-details">
                    <i class="fas fa-chart-bar"></i>
                    Média de aprovação: <span id="examPassRate">0%</span>
                </div>
            </div>
        </div>

        <!-- Engajamento Card -->
        <div class="stat-card">
            <div class="stat-header">
                <div class="stat-icon bg-warning-soft">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="stat-actions">
                    <i class="fas fa-ellipsis-h"></i>
                </div>
            </div>
            <div class="stat-info">
                <h3>Taxa de Engajamento</h3>
                <div class="stat-value" id="engagementRate">0%</div>
                <div class="stat-details">
                    <i class="fas fa-user-clock"></i>
                    <span id="activeToday">0</span> alunos ativos hoje
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="charts-container">
        <!-- Progresso dos Alunos -->
        <div class="chart-card">
            <div class="chart-header">
                <h3>Progresso dos Alunos</h3>
                <div class="chart-actions">
                    <button class="btn btn-icon">
                        <i class="fas fa-download"></i>
                    </button>
                    <button class="btn btn-icon">
                        <i class="fas fa-expand"></i>
                    </button>
                </div>
            </div>
            <div class="chart-body">
                <canvas id="studentProgressChart"></canvas>
            </div>
        </div>

        <!-- Distribuição de Notas -->
        <div class="chart-card">
            <div class="chart-header">
                <h3>Distribuição de Notas</h3>
                <div class="chart-actions">
                    <button class="btn btn-icon">
                        <i class="fas fa-download"></i>
                    </button>
                    <button class="btn btn-icon">
                        <i class="fas fa-expand"></i>
                    </button>
                </div>
            </div>
            <div class="chart-body">
                <canvas id="gradesDistributionChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Student Progress Section -->
    <div class="student-progress-section">
        <div class="section-header">
            <div class="header-content">
                <h3>Progresso dos Alunos</h3>
                <p class="text-secondary">Acompanhamento detalhado por aluno</p>
            </div>
            <div class="header-actions">
                <input type="text" id="student-search" class="form-control" placeholder="Buscar aluno...">
                <select id="course-filter" class="form-select">
                    <option value="">Todos os cursos</option>
                </select>
            </div>
        </div>
        <div id="student-progress-grid" class="students-grid">
            <!-- Student cards will be inserted here via JavaScript -->
        </div>
    </div>

    <!-- Recent Activity Table -->
    <div class="table-card">
        <div class="table-header">
            <div class="header-content">
                <h3>Últimos Cursos Concluídos</h3>
                <p class="text-secondary">Atividade recente dos alunos</p>
            </div>
            <a href="/admin/courses" class="btn btn-primary btn-sm">Ver Todos</a>
        </div>
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Aluno</th>
                        <th>Curso</th>
                        <th>Data Conclusão</th>
                        <th>Nota Final</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody id="recentCompletions">
                    <!-- Dados serão inseridos via JavaScript -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
/* CSS Variables */
:root {
    --bg-main: #0f172a;
    --bg-card: #1e293b;
    --bg-hover: #2d3748;
    --text-primary: #f1f5f9;
    --text-secondary: #94a3b8;
    --primary: #6366f1;
    --primary-dark: #4f46e5;
    --secondary: #818cf8;
    --border-color: #334155;
    --success: #10b981;
    --warning: #f59e0b;
    --info: #3b82f6;
    --danger: #ef4444;
    
    /* Soft backgrounds for icons */
    --primary-soft: rgba(99, 102, 241, 0.2);
    --success-soft: rgba(16, 185, 129, 0.2);
    --warning-soft: rgba(245, 158, 11, 0.2);
    --info-soft: rgba(59, 130, 246, 0.2);
    --danger-soft: rgba(239, 68, 68, 0.2);
}

/* Dashboard Container */
.dashboard-container {
    display: flex;
    flex-direction: column;
    gap: 24px;
    max-width: 1600px;
    margin: 0 auto;
    padding: 24px;
    background: var(--bg-main);
    min-height: 100vh;
}

/* Header Styles */
.dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 8px;
    background: var(--bg-card);
    padding: 20px;
    border-radius: 12px;
    border: 1px solid var(--border-color);
}

.header-content {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.dashboard-title {
    font-size: 24px;
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
}

.dashboard-subtitle {
    font-size: 14px;
    color: var(--text-secondary);
    margin: 0;
}

.dashboard-actions {
    display: flex;
    gap: 12px;
    align-items: center;
}

.btn-icon-text {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    height: 38px;
    padding: 0 16px;
    background: var(--bg-card);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.2s ease;
}

.btn-icon-text:hover {
    border-color: var(--primary-color);
    color: var(--primary-color);
    background: var(--hover-color);
}

.period-select {
    height: 38px;
    min-width: 140px;
    border-radius: 8px;
    font-size: 14px;
    border: 1px solid var(--border-color);
    background: var(--bg-card);
    color: var(--text-primary);
}

/* Stats Grid */
.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 24px;
    margin-top: 24px;
}

.stat-card {
    background: var(--bg-card);
    border-radius: 12px;
    padding: 20px;
    border: 1px solid var(--border-color);
    transition: transform 0.3s ease;
}

.stat-card:hover {
    transform: translateY(-5px);
}

.stat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
}

.stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
}

.stat-icon i {
    color: var(--primary);
}

.bg-primary-soft { background: var(--primary-soft); }
.bg-success-soft { background: var(--success-soft); }
.bg-warning-soft { background: var(--warning-soft); }
.bg-info-soft { background: var(--info-soft); }

.stat-info h3 {
    font-size: 14px;
    color: var(--text-secondary);
    margin: 0 0 8px 0;
}

.stat-value {
    font-size: 28px;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 8px;
}

.stat-change {
    font-size: 13px;
    display: flex;
    align-items: center;
    gap: 4px;
}

.stat-change.positive {
    color: var(--success);
}

.stat-change.negative {
    color: var(--danger);
}

.change-label {
    color: var(--text-secondary);
}

/* Charts */
.charts-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 24px;
}

.chart-card {
    background: var(--bg-card);
    border-radius: 12px;
    padding: 20px;
    border: 1px solid var(--border-color);
}

.chart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.chart-header h3 {
    font-size: 18px;
    color: var(--text-primary);
    margin: 0;
}

.chart-actions {
    display: flex;
    gap: 8px;
}

.btn-icon {
    width: 32px;
    height: 32px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-hover);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    transition: all 0.2s ease;
}

.btn-icon:hover {
    background: var(--primary);
    color: white;
}

.chart-body {
    position: relative;
    height: 300px;
}

/* Table Card */
.table-card {
    background: var(--bg-card);
    border-radius: 12px;
    padding: 20px;
    border: 1px solid var(--border-color);
}

.table-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.table-header h3 {
    font-size: 16px;
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
}

.text-secondary {
    font-size: 13px;
    color: var(--text-secondary);
    margin: 4px 0 0 0;
}

.table {
    color: var(--text-primary);
}

.table thead th {
    background: var(--bg-hover);
    color: var(--text-secondary);
    font-weight: 500;
    border-bottom: 1px solid var(--border-color);
    padding: 12px 16px;
}

.table tbody td {
    padding: 12px 16px;
    border-bottom: 1px solid var(--border-color);
    color: var(--text-primary);
}

.table tbody tr:hover {
    background: var(--bg-hover);
}

/* Form Controls */
.form-control, .form-select {
    background: var(--bg-hover);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    border-radius: 8px;
}

.form-control:focus, .form-select:focus {
    background: var(--bg-hover);
    border-color: var(--primary);
    color: var(--text-primary);
    box-shadow: 0 0 0 2px var(--primary-soft);
}

/* Student Progress Section */
.student-progress-section {
    background: var(--bg-card);
    border-radius: 12px;
    padding: 20px;
    border: 1px solid var(--border-color);
}

.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    flex-wrap: wrap;
    gap: 16px;
}

.header-actions {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

#student-search {
    width: 250px;
}

.students-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 20px;
}

.student-card {
    background: #f9fafb;
    border: 1px solid #e5e7eb;
    border-radius: 0.5rem;
    padding: 1rem;
    transition: all 0.2s;
}

.student-card:hover {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
}

.student-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #e5e7eb;
}

.student-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    object-fit: cover;
}

.student-details h3 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: #111827;
}

.student-details p {
    margin: 0;
    font-size: 0.875rem;
    color: #6b7280;
}

.courses-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.course-progress {
    background: white;
    padding: 0.75rem;
    border-radius: 0.375rem;
    border: 1px solid #e5e7eb;
}

.course-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
}

.course-title {
    font-weight: 500;
    color: #374151;
}

.course-percentage {
    font-size: 0.875rem;
    color: #6b7280;
}

.progress-bar {
    width: 100%;
    height: 6px;
    background: #e5e7eb;
    border-radius: 3px;
    overflow: hidden;
}

.progress-bar .progress {
    height: 100%;
    background: #4f46e5;
    border-radius: 3px;
    transition: width 0.3s ease;
}

.course-dates {
    display: flex;
    justify-content: space-between;
    margin-top: 0.5rem;
    font-size: 0.75rem;
    color: #6b7280;
}

.no-data,
.error-message,
.no-courses {
    text-align: center;
    padding: 2rem;
    color: #6b7280;
    background: #f9fafb;
    border-radius: 0.5rem;
    margin: 1rem 0;
}

.error-message {
    color: #dc2626;
    background: #fee2e2;
    border: 1px solid #fecaca;
}

.no-courses {
    padding: 1rem;
    margin: 0;
    background: #f3f4f6;
    border-radius: 0.375rem;
    font-size: 0.875rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .dashboard-container {
        padding: 16px;
    }
    
    .dashboard-header {
        flex-direction: column;
        gap: 16px;
        align-items: stretch;
    }
    
    .dashboard-actions {
        flex-direction: column;
    }
    
    .charts-container {
        grid-template-columns: 1fr;
    }
    
    .section-header {
        flex-direction: column;
        align-items: stretch;
    }
    
    .header-actions {
        flex-direction: column;
    }
}
</style>

<script>
// Mantendo o script existente, apenas ajustando as configurações dos gráficos
document.addEventListener('DOMContentLoaded', function() {
    // Cores personalizadas para os gráficos
    const chartColors = {
        progress: {
            background: 'rgba(56, 178, 172, 0.6)',
            border: 'rgba(56, 178, 172, 1)',
            hoverBackground: 'rgba(56, 178, 172, 0.8)'
        },
        grades: {
            background: 'rgba(124, 58, 237, 0.6)',
            border: 'rgba(124, 58, 237, 1)',
            hoverBackground: 'rgba(124, 58, 237, 0.8)'
        }
    };

    const chartOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                position: 'bottom',
                labels: {
                    usePointStyle: true,
                    padding: 20,
                    font: {
                        size: 12
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                grid: {
                    drawBorder: false,
                    color: 'rgba(0, 0, 0, 0.05)'
                },
                ticks: {
                    font: {
                        size: 12
                    }
                }
            },
            x: {
                grid: {
                    display: false
                },
                ticks: {
                    font: {
                        size: 12
                    }
                }
            }
        },
        animation: {
            duration: 1000,
            easing: 'easeInOutQuart'
        },
        hover: {
            mode: 'index',
            intersect: false
        }
    };

    const progressCtx = document.getElementById('studentProgressChart').getContext('2d');
    const gradesCtx = document.getElementById('gradesDistributionChart').getContext('2d');
    
    let progressChart, gradesChart;

    // Função para atualizar estatísticas
    async function updateStats() {
        try {
            const period = document.getElementById('periodSelect').value;
            const response = await fetch(`/admin/api/dashboard-stats?period=${period}`);
            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || 'Erro ao buscar dados');
            }

            // Atualizar cards de estatísticas
            document.getElementById('activeUsers').textContent = data.activeUsers.toLocaleString();
            document.getElementById('userGrowth').textContent = `${data.userGrowth}%`;
            document.getElementById('activeCourses').textContent = data.totalCourses.toLocaleString();
            document.getElementById('completedCourses').textContent = data.completedCourses.toLocaleString();
            document.getElementById('completedExams').textContent = data.completedExams.toLocaleString();
            document.getElementById('examPassRate').textContent = `${data.examPassRate}%`;
            document.getElementById('engagementRate').textContent = `${data.engagementRate}%`;
            document.getElementById('activeToday').textContent = data.activeToday.toLocaleString();

            // Atualizar gráfico de progresso
            if (progressChart) {
                progressChart.destroy();
            }

            progressChart = new Chart(progressCtx, {
                type: 'bar',
                data: {
                    labels: ['0-20%', '21-40%', '41-60%', '61-80%', '81-100%'],
                    datasets: [{
                        label: 'Número de Alunos',
                        data: [
                            data.charts.progress['0-20'],
                            data.charts.progress['21-40'],
                            data.charts.progress['41-60'],
                            data.charts.progress['61-80'],
                            data.charts.progress['81-100']
                        ],
                        backgroundColor: chartColors.progress.background,
                        borderColor: chartColors.progress.border,
                        borderWidth: 2,
                        borderRadius: 6,
                        hoverBackgroundColor: chartColors.progress.hoverBackground,
                        barThickness: 20
                    }]
                },
                options: {
                    ...chartOptions,
                    plugins: {
                        ...chartOptions.plugins,
                        title: {
                            display: false
                        }
                    }
                }
            });

            // Atualizar gráfico de notas
            if (gradesChart) {
                gradesChart.destroy();
            }

            gradesChart = new Chart(gradesCtx, {
                type: 'bar',
                data: {
                    labels: ['0-20', '21-40', '41-60', '61-80', '81-100'],
                    datasets: [{
                        label: 'Número de Alunos',
                        data: [
                            data.charts.grades['0-20'],
                            data.charts.grades['21-40'],
                            data.charts.grades['41-60'],
                            data.charts.grades['61-80'],
                            data.charts.grades['81-100']
                        ],
                        backgroundColor: chartColors.grades.background,
                        borderColor: chartColors.grades.border,
                        borderWidth: 2,
                        borderRadius: 6,
                        hoverBackgroundColor: chartColors.grades.hoverBackground,
                        barThickness: 20
                    }]
                },
                options: {
                    ...chartOptions,
                    plugins: {
                        ...chartOptions.plugins,
                        title: {
                            display: false
                        }
                    }
                }
            });

            // Atualizar classes de crescimento
            const userGrowthElement = document.querySelector('.stat-change');
            if (parseFloat(data.userGrowth) >= 0) {
                userGrowthElement.classList.remove('negative');
                userGrowthElement.classList.add('positive');
                userGrowthElement.querySelector('i').className = 'fas fa-arrow-up';
            } else {
                userGrowthElement.classList.remove('positive');
                userGrowthElement.classList.add('negative');
                userGrowthElement.querySelector('i').className = 'fas fa-arrow-down';
            }

            toastr.success('Dados atualizados com sucesso!');
        } catch (error) {
            console.error('Erro ao atualizar estatísticas:', error);
            toastr.error('Erro ao atualizar dados');
        }
    }

    // Atualizar estatísticas iniciais
    updateStats();

    // Configurar eventos
    document.getElementById('refreshStats').addEventListener('click', updateStats);
    document.getElementById('periodSelect').addEventListener('change', updateStats);

    // Atualizar a cada 5 minutos
    setInterval(updateStats, 5 * 60 * 1000);
});

async function loadStudentProgress() {
    try {
        const response = await fetch('/admin/api/students/progress', {
            headers: {
                'Accept': 'application/json'
            }
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const students = await response.json();
        console.log('Dados recebidos:', students);

        const progressGrid = document.getElementById('student-progress-grid');
        const courseFilter = document.getElementById('course-filter');
        
        if (!progressGrid || !courseFilter) {
            console.error('Elementos não encontrados');
            return;
        }

        // Limpar grid existente
        progressGrid.innerHTML = '';

        if (!students || students.length === 0) {
            progressGrid.innerHTML = '<div class="no-data">Nenhum aluno encontrado</div>';
            return;
        }

        // Coletar todos os cursos únicos para o filtro
        const allCourses = new Set();
        students.forEach(student => {
            student.courses?.forEach(course => {
                if (course.title) allCourses.add(course.title);
            });
        });

        // Atualizar o filtro de cursos
        courseFilter.innerHTML = '<option value="">Todos os cursos</option>';
        Array.from(allCourses).sort().forEach(courseTitle => {
            courseFilter.innerHTML += `<option value="${courseTitle}">${courseTitle}</option>`;
        });

        // Criar cards para cada aluno
        students.forEach(student => {
            const card = document.createElement('div');
            card.className = 'student-card';
            card.setAttribute('data-student-name', student.name.toLowerCase());
            card.setAttribute('data-student-email', student.email.toLowerCase());

            const coursesHtml = student.courses?.map(course => `
                <div class="course-progress">
                    <div class="course-info">
                        <span class="course-title">${course.title}</span>
                        <span class="course-percentage">${course.progress}%</span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress" style="width: ${course.progress}%"></div>
                    </div>
                    <div class="course-dates">
                        ${course.startedAt ? `<span>Iniciado: ${new Date(course.startedAt).toLocaleDateString()}</span>` : ''}
                        ${course.completedAt ? `<span>Concluído: ${new Date(course.completedAt).toLocaleDateString()}</span>` : ''}
                    </div>
                </div>
            `).join('') || '<div class="no-courses">Nenhum curso matriculado</div>';

            card.innerHTML = `
                <div class="student-info">
                    <img src="${student.profilePicture || '/images/default-avatar.png'}" alt="Foto de ${student.name}" class="student-avatar">
                    <div class="student-details">
                        <h3>${student.name}</h3>
                        <p>${student.email}</p>
                    </div>
                </div>
                <div class="courses-list">
                    ${coursesHtml}
                </div>
            `;

            progressGrid.appendChild(card);
        });

        // Adicionar listeners para filtros
        document.getElementById('student-search').addEventListener('input', filterStudents);
        courseFilter.addEventListener('change', filterStudents);

    } catch (error) {
        console.error('Erro ao carregar progresso:', error);
        const progressGrid = document.getElementById('student-progress-grid');
        if (progressGrid) {
            progressGrid.innerHTML = `<div class="error-message">Erro ao carregar dados: ${error.message}</div>`;
        }
    }
}

function filterStudents() {
    const search = document.getElementById('student-search').value.toLowerCase();
    const selectedCourse = document.getElementById('course-filter').value;
    const cards = document.querySelectorAll('.student-card');

    cards.forEach(card => {
        const studentName = card.getAttribute('data-student-name');
        const studentEmail = card.getAttribute('data-student-email');
        const courseElements = card.querySelectorAll('.course-progress');
        
        const nameMatch = studentName.includes(search) || studentEmail.includes(search);
        let courseMatch = true;

        if (selectedCourse) {
            courseMatch = Array.from(courseElements).some(courseElement => 
                courseElement.querySelector('.course-title').textContent === selectedCourse
            );
        }

        card.style.display = nameMatch && courseMatch ? 'block' : 'none';
    });
}

// Carregar dados quando a página carregar
document.addEventListener('DOMContentLoaded', loadStudentProgress);
</script> 