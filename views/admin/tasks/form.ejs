<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><%= task._id ? 'Editar' : 'Nova' %> Task</h5>
                </div>
                <div class="card-body">
                    <% if (error && error.length > 0) { %>
                        <div class="alert alert-danger"><%= error %></div>
                    <% } %>

                    <form action="/admin/tasks<%= task._id ? '/' + task._id : '' %>" method="POST" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="title" class="form-label">Título *</label>
                            <input type="text" class="form-control" id="title" name="title" value="<%= task.title || '' %>" required>
                        </div>

                        <div class="mb-3">
                            <label for="description" class="form-label">Descrição</label>
                            <textarea class="form-control" id="description" name="description" rows="3"><%= task.description || '' %></textarea>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="status" class="form-label">Status</label>
                                    <select class="form-select" id="status" name="status">
                                        <option value="pendente" <%= (task.status === 'pendente' || !task.status) ? 'selected' : '' %>>Pendente</option>
                                        <option value="em_andamento" <%= task.status === 'em_andamento' ? 'selected' : '' %>>Em Andamento</option>
                                        <option value="concluida" <%= task.status === 'concluida' ? 'selected' : '' %>>Concluída</option>
                                        <option value="cancelada" <%= task.status === 'cancelada' ? 'selected' : '' %>>Cancelada</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="priority" class="form-label">Prioridade</label>
                                    <select class="form-select" id="priority" name="priority">
                                        <option value="baixa" <%= (task.priority === 'baixa' || !task.priority) ? 'selected' : '' %>>Baixa</option>
                                        <option value="media" <%= task.priority === 'media' ? 'selected' : '' %>>Média</option>
                                        <option value="alta" <%= task.priority === 'alta' ? 'selected' : '' %>>Alta</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="dueDate" class="form-label">Data de Entrega</label>
                                    <input type="date" class="form-control" id="dueDate" name="dueDate" 
                                        value="<%= task.dueDate ? task.dueDate.toISOString().split('T')[0] : '' %>">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="assignedTo" class="form-label">Atribuir para</label>
                                    <select class="form-select" id="assignedTo" name="assignedTo">
                                        <option value="">Selecione um usuário</option>
                                        <% users.forEach(user => { %>
                                            <option value="<%= user._id %>" 
                                                <%= task.assignedTo && task.assignedTo.toString() === user._id.toString() ? 'selected' : '' %>>
                                                <%= user.name %>
                                            </option>
                                        <% }) %>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="category" class="form-label">Categoria</label>
                                    <input type="text" class="form-control" id="category" name="category" value="<%= task.category || '' %>">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="tags" class="form-label">Tags (separadas por vírgula)</label>
                                    <input type="text" class="form-control" id="tags" name="tags" 
                                        value="<%= task.tags ? task.tags.join(', ') : '' %>">
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="attachments" class="form-label">Anexos</label>
                            <input type="file" class="form-control" id="attachments" name="attachments" multiple 
                                accept=".jpg,.jpeg,.png,.gif,.pdf,.doc,.docx,.xls,.xlsx,.txt">
                            <small class="text-muted">Você pode selecionar até 5 arquivos. Tipos permitidos: imagens, PDF, DOC, XLS e TXT.</small>
                        </div>

                        <% if (task.attachments && task.attachments.length > 0) { %>
                            <div class="mb-3">
                                <label class="form-label">Anexos Atuais</label>
                                <div class="attachments-list">
                                    <% task.attachments.forEach(attachment => { %>
                                        <div class="attachment-item">
                                            <a href="<%= attachment.url %>" target="_blank" class="attachment-link">
                                                <%= attachment.name %>
                                            </a>
                                            <button type="button" class="btn-icon" onclick="deleteAttachment('<%= task._id %>', '<%= attachment._id %>')">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        <% } %>

                        <div class="d-flex justify-content-between">
                            <a href="/admin/tasks" class="btn btn-secondary">Voltar</a>
                            <button type="submit" class="btn btn-primary">Salvar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        background: var(--bg-card);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .form-control, .form-select {
        background-color: var(--bg-main);
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: var(--text-primary);
    }

    .form-control:focus, .form-select:focus {
        background-color: var(--bg-main);
        border-color: var(--primary);
        color: var(--text-primary);
        box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.25);
    }

    .form-control::placeholder {
        color: var(--text-secondary);
    }

    .form-select option {
        background-color: var(--bg-main);
        color: var(--text-primary);
    }

    .btn-primary {
        background-color: var(--primary);
        border: none;
    }

    .btn-primary:hover {
        background-color: #2563eb;
    }

    .btn-secondary {
        background-color: var(--bg-card);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .btn-secondary:hover {
        background-color: #374151;
        border-color: rgba(255, 255, 255, 0.2);
    }

    .attachments-list {
        margin-top: 0.5rem;
    }

    .attachment-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.5rem;
        background: var(--bg-main);
        border-radius: 0.25rem;
        margin-bottom: 0.5rem;
    }

    .attachment-link {
        color: var(--primary);
        text-decoration: none;
    }

    .attachment-link:hover {
        text-decoration: underline;
    }

    input[type="file"] {
        padding: 0.375rem;
    }

    input[type="file"]::-webkit-file-upload-button {
        background-color: var(--primary);
        color: white;
        border: none;
        padding: 0.375rem 0.75rem;
        border-radius: 0.25rem;
        margin-right: 1rem;
        cursor: pointer;
    }

    input[type="file"]::-webkit-file-upload-button:hover {
        background-color: #2563eb;
    }
</style>

<script>
async function deleteAttachment(taskId, attachmentId) {
    if (!confirm('Tem certeza que deseja excluir este anexo?')) return;

    try {
        const response = await fetch(`/admin/tasks/${taskId}/attachments/${attachmentId}`, {
            method: 'DELETE'
        });

        if (!response.ok) throw new Error('Erro ao excluir anexo');

        location.reload();
    } catch (error) {
        console.error('Erro:', error);
        alert('Erro ao excluir anexo');
    }
}

// Validação do tamanho e tipo dos arquivos
document.getElementById('attachments').addEventListener('change', function(e) {
    const files = e.target.files;
    const maxSize = 5 * 1024 * 1024; // 5MB
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'application/pdf', 
                         'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                         'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                         'text/plain'];

    for (let i = 0; i < files.length; i++) {
        if (files[i].size > maxSize) {
            alert(`O arquivo ${files[i].name} excede o tamanho máximo de 5MB`);
            e.target.value = '';
            return;
        }
        if (!allowedTypes.includes(files[i].type)) {
            alert(`O arquivo ${files[i].name} não é de um tipo permitido`);
            e.target.value = '';
            return;
        }
    }
});
</script> 